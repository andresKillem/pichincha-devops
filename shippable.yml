
language: go

go:
  - 1.11.5

env:
  global:
    # AWS credentials
    - ECR_REPO=300519856611.dkr.ecr.us-east-2.amazonaws.com/pichincha
    - PASS_AWS=EAlateral2019
    - ID_AWS=300519856611
build:
  ci:
    - export GO111MODULE=on
    - make all
  post_ci:
#    - 'if [ $IS_PULL_REQUEST == "false" ] ; then docker build -t $ECR_REPO:$BRANCH.$BUILD_NUMBER .; fi'
#    - 'if [ $IS_PULL_REQUEST == "false" ] ; then docker push $ECR_REPO:$BRANCH.$BUILD_NUMBER ; fi'
#    - 'if [ $IS_PULL_REQUEST == "false" ] ; then shipctl post_resource_state deploy-ecs-basic-image versionName $BRANCH.$BUILD_NUMBER; fi'
     - 'if [ $IS_PULL_REQUEST == "false" ] ; then echo "$PASS_AWS" | docker login -u "$ID_AWS" --password-stdin ; fi'
     - 'if [ $IS_PULL_REQUEST == "false" ] ; then docker build -t pichincha .; fi'
     - 'if [ $IS_PULL_REQUEST == "false" ] ; then docker tag pichincha $ECR_REPO:$BRANCH.$BUILD_NUMBER ; fi'
     - 'if [ $IS_PULL_REQUEST == "false" ] ; then docker push $ECR_REPO:$BRANCH.$BUILD_NUMBER ; fi'
     - 'if [ $IS_PULL_REQUEST == "false" ] ; then shipctl post_resource_state deploy-ecs-basic-image versionName $BRANCH.$BUILD_NUMBER; fi'

integrations:
  hub:
    - integrationName: dr-aws-keys
      type: amazonKeys


resources:
  - name: deploy-ecs-basic-image
    type: image
    integration: dr-aws-keys
    pointer:
      sourceName: "300519856611.dkr.ecr.us-east-2.amazonaws.com/pichincha"
    seed:
      versionName: "latest"

  - name: deploy-ecs-basic-params
    type: params
    version:
      params:
        PORT: 3000
        ENVIRONMENT: "dev"

  - name: deploy-ecs-basic-docker-options
    type: dockerOptions
    versionTemplate:
      linuxParameters:
        initProcessEnabled: true
      memory: 100
      portMappings:
        - 3000:3000

  - name: deploy-ecs-basic-replicas
    type: replicas
    version:
      count: 1

  - name: deploy-ecs-basic-ecs-cluster
    type: cluster
    integration: dr-aws-keys
    pointer:
      sourceName : "deploy-ecs-basic"
      region: "us-east-2"


jobs:
  - name: deploy-ecs-basic_runCI
    type: runCI
    steps:
      - OUT: deploy-ecs-basic-image

  - name: deploy-ecs-basic-manifest
    type: manifest
    steps:
     - IN: deploy-ecs-basic-image
     - IN: deploy-ecs-basic-docker-options
     - IN: deploy-ecs-basic-params
     - IN: deploy-ecs-basic-replicas

  - name: deploy-ecs-basic-deploy
    type: deploy
    steps:
      - IN: deploy-ecs-basic-manifest
      - IN: deploy-ecs-basic-ecs-cluster
      - TASK: managed
        deployMethod: replace